<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.letech.study.cmmn.user.dao.UserDAO">
	<sql id="searchUser">
		<choose>
			<when test="userId != '' and userNm == ''">
				AND user_id LIKE CONCAT('%', #{userId},'%')
			</when>
			<when test="userId == '' and userNm != ''">
				AND user_nm LIKE CONCAT('%', #{userNm},'%')
			</when>
			<when test="userId != null and userNm != null">
				AND user_id LIKE CONCAT('%', #{userId},'%')
				AND	user_nm LIKE CONCAT('%', #{userNm},'%')
			</when>
		</choose>
	</sql>
	
	<select id="selectUserList" parameterType="userVO" resultType="userVO">
		/** kr.letech.study.cmmn.user.dao.UserDAO.selectUserList -- KSY */
		SELECT USER_ID
			 , USER_PW
			 , USER_NM
			 , RGST_ID
			 , RGST_DT
		  FROM TB_USER
		 WHERE DEL_YN = 'N' 
		  <include refid="searchUser"/>
	</select>
	
	<insert id="insertUser" parameterType="userVO">
		/** kr.letech.study.cmmn.user.dao.UserDAO.insertUser -- KSY */
		INSERT INTO TB_USER(
			   USER_ID
			 , USER_PW
			 , USER_NM
			 , RGST_ID
			 , RGST_DT
			 , UPDT_ID
			 , UPDT_DT
			 <if test="fileGrpId != null">
			 , FILE_GRP_ID
			 </if>
			 )
		VALUES (
			   #{userId}
			 , #{userPw}
			 , #{userNm}
			 , #{userId}
			 , NOW()
			 , #{userId}
			 , NOW() 
			 <if test="fileGrpId != null">
			 , #{fileGrpId}
			 </if>
			 )
	</insert>
	
	<resultMap type="userVO" id="userMap">
		<id property="userId" column="USER_ID"/>
		<result property="userPw" column="USER_PW"/>
		<result property="userNm" column="USER_NM"/>
		<result property="delYn" column="DEL_YN"/>
		<result property="fileGrpId" column="FILE_GRP_ID"/>
		<result property="rgstId" column="USER_RGST_ID"/>
		<result property="rgstDt" column="USER_RGST_DT"/>
		<result property="updtId" column="USER_UPDT_ID"/>
		<result property="updtDt" column="USER_UPDT_DT"/>
		<association property="fileVO" resultMap="fileMap"/>
		<collection property="authVOList" resultMap="authVOMap" />
	</resultMap>
	
	<resultMap type="kr.letech.study.cmmn.file.vo.FileVO" id="fileMap">
			<id property="fileGrpId" column="FILE_GRP_ID"/>
			<id property="fileNo" column="FILE_NO"/>
			<result property="fileOriginNm" column="FILE_ORIGIN_NM"/>
			<result property="fileSaveNm" column="FILE_SAVE_NM"/>
			<result property="fileSize" column="FILE_SIZE"/>
			<result property="fileDiv" column="FILE_DIV"/>
			<result property="rgstDt" column="FILE_RGST_DT"/>
	</resultMap>
	
	<resultMap type="kr.letech.study.cmmn.user.vo.UserAuthVO" id="authVOMap">
		<id property="userId" column="USER_ID"/>
		<id property="userAuth" column="USER_AUTH"/>
		<result property="authNm" column="AUTH_NM"/>
	</resultMap>

	<select id="selectUserOne" parameterType="userVO" resultMap="userMap">
		/** kr.letech.study.cmmn.user.dao.UserDAO.selectUserOne -- KSY */
		SELECT A.USER_ID
			 , A.USER_PW
			 , A.USER_NM
			 , A.DEL_YN
			 , A.RGST_ID AS USER_RGST_ID
			 , A.RGST_DT AS USER_RGST_DT
			 , A.UPDT_ID AS USER_UPDT_ID
			 , A.UPDT_DT AS USER_UPDT_DT
			 , B.USER_AUTH
			 , B.CD_NM AS AUTH_NM
			 , C.FILE_GRP_ID
			 , C.FILE_NO
			 , C.FILE_ORIGIN_NM
			 , C.FILE_SAVE_NM
			 , C.FILE_SIZE
			 , C.FILE_DIV
			 , C.RGST_DT AS FILE_RGST_DT
		  FROM TB_USER A
		 INNER JOIN (
		 		SELECT USER_ID
		 			 , USER_AUTH
		 			 , CD_NM
		 		  FROM TB_USER_AUTH UA
		 		 INNER JOIN TB_CD TC ON (UA.USER_AUTH = TC.CD)
		 		 WHERE UA.DEL_YN = 'N'
		 ) B ON (A.USER_ID = B.USER_ID) 
		  LEFT OUTER JOIN CMMN_FILES C ON (A.FILE_GRP_ID = C.FILE_GRP_ID AND C.DEL_YN = 'N')
		 WHERE A.USER_ID = #{userId}
	</select>
	
	<update id="updateUser" parameterType="userVO">
		/** kr.letech.study.cmmn.user.dao.UserDAO.updateUser -- KSY */
		UPDATE TB_USER
		   SET USER_NM = #{userNm}
		     <if test="userPw != null and userPw != ''">
		     , USER_PW = #{userPw}	
		     </if>
		     , FILE_GRP_ID = #{fileGrpId}
		     , UPDT_ID = #{userId}
		     , UPDT_DT = now()
		 WHERE USER_ID = #{userId}
	</update>
	
	<update id="deleteUser" parameterType="userVO">
		/** kr.letech.study.cmmn.user.dao.UserDAO.deleteUser -- KSY */
		UPDATE TB_USER
		   SET DEL_YN = 'Y'
		     , UPDT_ID = #{userId}
		     , UPDT_DT = now()
		 WHERE USER_ID = #{userId}
	</update>
	
	<select id="selectUserListTemp" resultType="userVO">
		/** kr.letech.study.cmmn.user.dao.UserDAO.selectUserListTemp -- KSY */
		SELECT USER_ID
			 , USER_NM
		  FROM TB_USER
		 WHERE DEL_YN = 'N'
	</select>
	
	<update id="deleteUserAuth" parameterType="userVO">
	/** kr.letech.study.cmmn.user.dao.UserDAO.deleteUserAuth -- KSY */
		UPDATE TB_USER_AUTH
		   SET DEL_YN = 'Y'
			 , UPDT_ID = #{updtId}
			 , UPDT_DT = NOW()
	     WHERE USER_ID = #{userId}
	</update>
	
	<insert id="mergeUserAuth" parameterType="kr.letech.study.cmmn.user.vo.UserAuthVO" >
		/** kr.letech.study.cmmn.user.dao.UserDAO.mergeUserAuth -- KSY */
			INSERT INTO TB_USER_AUTH 
			(
				   USER_ID
				 , USER_AUTH
				 , RGST_ID
				 , RGST_DT
				 , UPDT_ID
				 , UPDT_DT
				 , DEL_YN
			)
			VALUES 
			(
				   #{userId}
				 , #{userAuth}
				 , #{rgstId}
				 , NOW()
				 , #{rgstId}
				 , NOW()
				 , 'N'
			)
			ON DUPLICATE KEY UPDATE
				DEL_YN = 'N',
			   UPDT_ID = #{updtId},
			   UPDT_DT = NOW() 
	</insert>
	
	
	<!-- 삭제쪽 분리 -->
	<insert id="mergeUserAuth2" parameterType="userVO">
		/** kr.letech.study.cmmn.user.dao.UserDAO.mergeUserAuth -- KSY */
			UPDATE TB_USER_AUTH
			   SET DEL_YN = 'Y'
				 , UPDT_ID = #{updtId}
				 , UPDT_DT = NOW()
		     WHERE USER_ID = #{userId}
			   AND USER_AUTH IN (SELECT CD 
		   						   FROM TB_CD 
		   						  WHERE CD_GRP='AUTH'
		   						  );
			INSERT INTO TB_USER_AUTH 
			(
				   USER_ID
				 , USER_AUTH
				 , RGST_ID
				 , RGST_DT
				 , UPDT_ID
				 , UPDT_DT
				 , DEL_YN
			)
			VALUES 
			(
				   #{userId}
				 , #{auth}
				 , #{rgstId}
				 , NOW()
				 , #{rgstId}
				 , NOW()
				 , 'N'
			)
			ON DUPLICATE KEY UPDATE
				DEL_YN = 'N',
			   UPDT_ID = #{updtId},
			   UPDT_DT = NOW()
	</insert>
</mapper>